Score : P  | Easy
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:

Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1].


SOLUTION #1

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int [] index = new int[2];
        for(int i=0; i < nums.length; i++){
            for(int j=0; j<nums.length; j++){
                if( i != j ){
                    if(nums[i] + nums[j] == target){
                        index[0] = i;
                        index[1] = j;
                        return index;
                    }
                }   
            }
        }
        return index;
    }
}

SOLUTION #2

import java.util.*; 
class Solution {
    public int[] twoSum(int[] nums, int target) {
        int [] index = new int[2];
        int complement;
        Hashtable <Integer, Integer> table = new Hashtable<Integer, Integer>();
        
        for(int i=0; i < nums.length; i++){
            table.put(nums[i], i);
        }
        
        for(int i=0; i < nums.length; i++){
            complement = target - nums[i];
            
            if(table.containsKey(complement)){
                if( i != table.get(complement)){
                    index[0] = i;
                    index[1] = table.get(complement);
                    return index;
                }
            }
        }
        return index;
    }
}
