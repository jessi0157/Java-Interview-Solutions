Score : F(Only cause you need regular expressions to solve question & use a replace all method) | Difficulty Easy(Ehh)
Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

Note: For the purpose of this problem, we define empty string as valid palindrome.

Example 1:

Input: "A man, a plan, a canal: Panama"
Output: true
Example 2:

Input: "race a car"
Output: false


SOLUTION #1
class Solution {
    public boolean isPalindrome(String s) {
        String str = s.replaceAll("[^A-Za-z0-9]", "");
        str = str.toLowerCase();
        System.out.println(str);
        // r a c e c a r
        // 0 1 2 3 4 5 6
        if(str.length() == 0){
            return true;
        }
        for(int i=0; i< str.length()/2; i++){
            if(str.charAt(i) != str.charAt(str.length()-1-i)){
                return false;
            }
        }
        return true;
    }
}

Solution #2
class Solution {
    public boolean isPalindrome(String s) {
        s = s.toLowerCase();
        s = s.replaceAll("[^A-Za-z0-9]","");
        
        int j = s.length() - 1;
        for(int i = 0; i < j; i++, j--)
        {
            if(s.charAt(i) != s.charAt(j))
            {
                return false;
            }
        }
        return true;
    }
}
