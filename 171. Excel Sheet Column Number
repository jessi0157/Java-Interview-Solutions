Score : P | Difficulty: Easy
Given a column title as appear in an Excel sheet, return its corresponding column number.

For example:

    A -> 1
    B -> 2
    C -> 3
    ...
    Z -> 26
    AA -> 27
    AB -> 28 
    ...
Example 1:

Input: "A"
Output: 1
Example 2:

Input: "AB"
Output: 28
Example 3:

Input: "ZY"
Output: 701

J's solution (a bit faster):
class Solution {
    public int titleToNumber(String s) {
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        int last = s.length()-1;
        int sum = 0;
        
        map.put('A',1);
        map.put('B',2);
        map.put('C',3);
        map.put('D',4);
        map.put('E',5);
        map.put('F',6);
        map.put('G',7);
        map.put('H',8);
        map.put('I',9);
        map.put('J',10);
        map.put('K',11);
        map.put('L',12);
        map.put('M',13);
        map.put('N',14);
        map.put('O',15);
        map.put('P',16);
        map.put('Q',17);
        map.put('R',18);
        map.put('S',19);
        map.put('T',20);
        map.put('U',21);
        map.put('V',22);
        map.put('W',23);
        map.put('X',24);
        map.put('Y',25);
        map.put('Z',26);
        
        for(int i = 0; i < s.length(); i++){
            sum += Math.pow(26.0, (double) last) * map.get(s.charAt(i));
            last--;
        }
        
        return sum;
    }
}

M's Lazy No HashMap Solution:
class Solution {
    public int titleToNumber(String s) {
        int total = 0;
        int power = s.length() - 1;
        for(int i = 0; i < s.length(); i++)
        {
            
            System.out.println( ((int)(s.charAt(i))) - 64);
            System.out.println( i);
            total += Math.pow(26,power) * (((int)(s.charAt(i))) - 64); 
            power--;
        }
        return total;
    }
}

