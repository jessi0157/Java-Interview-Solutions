Score : F || Difficulty : Easy
Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Note that an empty string is also considered valid.

Example 1:

Input: "()"
Output: true
Example 2:

Input: "()[]{}"
Output: true
Example 3:

Input: "(]"
Output: false
Example 4:

Input: "([)]"
Output: false
Example 5:

Input: "{[]}"
Output: true

M: Solution I ended up with:
class Solution {
    public boolean isValid(String s) {
        if(s.equals("")) return true;
        Stack<Character> stack = new Stack<>();
        for(char c : s.toCharArray())
        {
            if(c=='(')
            {
                stack.push(')');
            }
            else if(c=='{')
            {
                stack.push('}');
            }
            else if(c==('['))
            {
                stack.push(']');
            }
            else if(stack.empty() || stack.pop() != c)
            {
                return false;
            }
        }
        return stack.empty();
    }
}
