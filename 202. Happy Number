Difficulty: Easy

Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

Example: 

Input: 19
Output: true
Explanation: 
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1

M's new Solution with J's help:

class Solution {
    HashSet<Integer> bucket = new HashSet<>();
    public boolean isHappy(int n) {
        int copy = n;
        int total = 0;
        if(n == 0) {
            return false;
        }
        while(copy != 0){
            total += Math.pow(copy % 10, 2);
            copy /= 10;
        }
        if(total == 1){
            return true;
        }        
        if(bucket.contains(total)) {
            return false;
        }
        bucket.add(total);

        return isHappy(total);
    }
}
J's solution:
class Solution {
    public boolean isHappy(int n) {
        HashSet<Integer> set = new HashSet<Integer>();
        
        int tot = 0;
        
        while(n > 0) {
            tot += (int) Math.pow(n % 10, 2);
            n = n / 10;
 
            if(n == 0){
                if(tot == 1){
                    return true;
                }
                if(!set.contains(tot)){
                    set.add(tot);
                } else {
                    return false;
                }
                n = tot;
                tot = 0;
            }
        }
        
        return true;
    }
}
M's solution (n) :
class Solution {
    public boolean isHappy(int n) {
        HashSet<Integer> set = new HashSet<>();
        int number = n;
        int total = 0;
        while(number > 0)
        {
            total += Math.pow( number % 10, 2);
            number /= 10;
            
            if(number == 0)
            {
                if(total == 1)
                {
                    return true;
                }
                if(!set.contains(total)){
                    set.add(total);
                    number = total;
                    total = 0;
                }
                else{
                    return false;
                }
            }
        }
        return true;
    }
}
