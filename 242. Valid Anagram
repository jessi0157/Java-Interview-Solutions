Sol 1)
class Solution {
    public boolean isAnagram(String s, String t) 
    {
        char[] tempArray= s.toCharArray();
        Arrays.sort(tempArray);
        char[] tempArray2 = t.toCharArray();
        Arrays.sort(tempArray2);

        if(Arrays.equals(tempArray,tempArray2))
        {
            return true;
        }
        return false;
    }
}
Sol 1 alternative )
class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length() != t.length())
        {return false;}
        char[] sArray = s.toCharArray();
        char[] tArray = t.toCharArray();
        
        Arrays.sort(sArray);
        Arrays.sort(tArray);
        for(int i = 0; i < sArray.length; i++)
        {
            if(sArray[i] != tArray[i])
            {return false;}
        }
        return true;
    }
}

Sol 2)
class Solution {
    public boolean isAnagram(String s, String t) 
    {
        HashMap<Character,Integer> string1 = new HashMap<>();
        for(int i = 0; i < s.length(); i++)
        {
            // System.out.println(s.charAt(i));
            // System.out.println(s.charAt(i) + 1);
            string1.put(s.charAt(i), string1.getOrDefault(s.charAt(i),0) + 1);
        }
        
        System.out.println(string1);
        HashMap<Character,Integer> string2 = new HashMap<>();
        for(int i = 0; i < t.length(); i++)
        {
            // System.out.println(s.charAt(i));
            // System.out.println(s.charAt(i) + 1);
            string2.put(t.charAt(i), string2.getOrDefault(t.charAt(i),0) + 1);
        }
        
        
        System.out.println(string2);
        
        
        if(string1.equals(string2))
        {
            return true;
        }
        
        return false;
    }
}

sol 3)
class Solution {
    public boolean isAnagram(String s, String t) {
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        HashMap<Character, Integer> map2 = new HashMap<Character, Integer>();        
        int counter = 1;
        if(s.length() == 0 && t.length() == 0){
            return true;
        }
        for (int i = 0; i < s.length(); i++){
            if (map.containsKey(s.charAt(i))){
                map.replace(s.charAt(i), map.get(s.charAt(i))+1);      
            } else
                map.put(s.charAt(i), counter);
        }
        System.out.println(map);
        
        for (int i = 0; i < t.length(); i++){
            if (map2.containsKey(t.charAt(i))){
                map2.replace(t.charAt(i), map2.get(t.charAt(i))+1);      
            } else
                map2.put(t.charAt(i), counter);
        }
        System.out.println(map2);
       
        if (map.equals(map2)){
            return true;
        }
        return false;
    }
}
