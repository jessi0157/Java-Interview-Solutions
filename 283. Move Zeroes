Score : P | Difficulty : EZ
Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]
Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.

J's solution:

class Solution {
    public void moveZeroes(int[] nums) {

        int i = 0;
        int j = 1;
        
        while(i < nums.length && j < nums.length){
            if(nums[i] == 0 && nums[j] != 0){
                int temp = nums[i];
                nums[i] = nums[j];
                nums[j] = temp;
                i++;
            }
            if(nums[i] != 0){
                i++;
            }
            j++;
        }
    }
}


J+M Solution:
class Solution {
    public void moveZeroes(int[] nums) {
        int i = 0, j = 1;
        
        
        while(i < nums.length && j < nums.length)
        {
            if(nums[i] == 0 && nums[j] != 0)
            {
                int temp = nums[j];
                nums[j] = nums[i];
                nums[i] = temp;
                i++;
                j++;
            }
            else if(nums[i] == 0 && nums[j] == 0)
            {
                j++;
            }
            else if(nums[i] != 0)
            {
                i++;
                j++;
            }
        }
    }
}


Site Simpler solution(just shorter):
class Solution {
    public void moveZeroes(int[] nums) {
       int j = 0; 
       int i = 0;
       while(i < nums.length){
           if(nums[i] != 0){
               int temp = nums[i];
               nums[i] = nums[j];
               nums[j] = temp;
               j++;
           }
           i++;
       }
    }
}
