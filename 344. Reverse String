Score : P | Difficulty : Easy
Write a function that reverses a string. The input string is given as an array of characters char[].

Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.

You may assume all the characters consist of printable ascii characters.

 

Example 1:

Input: ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]
Example 2:

Input: ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]


M's Simpler Solution(Fastest - Linear - Easy to understand):

class Solution {
    public void reverseString(char[] s) {
        for(int i = 0; i < s.length/2; i++)
        {
            char temp = s[i];
            s[i] = s[s.length - 1 - i];
            s[s.length - 1 - i] = temp;
        }
    }
}


SOLUTION 1:

class Solution {
    public void reverseString(char[] s) {
        char temp;
       
        for(int i =0; i< s.length/2; i++){
            temp = s[i];
            s[i] = s[s.length-(i+1)];
            s[s.length-(i+1)] = temp;
        }
        
        System.out.println(s);
    }
}

OR
M's Solution :

class Solution {
    public void reverseString(char[] s) {
        System.out.println(s);
        int start = 0;
        int end = s.length - 1;
        while(start != end && start < end)
        {
            char temp = s[end];
            s[end] = s[start];
            s[start] = temp;
            start++;
            end--;
        }
    }
}
